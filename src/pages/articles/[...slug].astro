---
import { type CollectionEntry, getCollection } from "astro:content";
import Article from "@layouts/Article.astro";

export async function getStaticPaths() {
  const isDev = import.meta.env.DEV;
  const articles = await getCollection("articles");
  return articles
    .filter((article) => {
      // In production, exclude templates and drafts
      // In development, include everything
      return (
        isDev || (!article.id.startsWith("_template") && !article.data.draft)
      );
    })
    .map((article) => ({
      params: { slug: article.slug },
      props: article,
    }));
}
type Props = CollectionEntry<"articles">;

const article = Astro.props;
const { Content } = await article.render();
---

<Article {...article.data}>
  {
    article.data.draft && (
      <div class="draft-banner">
        DRAFT - This article is not published in production
      </div>
    )
  }
  {
    article.id.startsWith("_template") && (
      <div class="template-banner">
        TEMPLATE - This is a template file for reference only
      </div>
    )
  }
  <Content />
</Article>

<style>
  .draft-banner,
  .template-banner {
    text-align: center;
    padding: 0.5rem;
    margin-bottom: 1.5rem;
    border-radius: 4px;
    font-weight: bold;
    color: white;
  }

  .draft-banner {
    background-color: #ff6b6b;
  }

  .template-banner {
    background-color: #8269ff;
  }
</style>
