---
import type { CollectionEntry } from "astro:content";
import BaseHead from "@components/BaseHead.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import FormattedDate from "@components/FormattedDate.astro";

type Props = CollectionEntry<"articles">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      article {
        display: flex;
        justify-content: center;
      }
      .hero {
        position: relative;
        border-radius: 0.375rem;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        padding: 2rem;
        width: 1020px;
        height: 360px;
      }
      .hero h1 {
        color: rgb(var(--gray-light));
      }
      .credit {
        position: absolute;
        bottom: 0;
        right: 0;
        margin: 0 auto;
        border-top-left-radius: 0.375rem;
        padding: 0.25rem 0.375rem;
        background-color: rgb(var(--black));
        font-size: 0.75rem;
        line-height: 1rem;
        opacity: 0.5;
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
        transition-duration: 300ms;
        color: rgb(var(--gray-light));
        &:hover {
          opacity: 0.6;
        }
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray-light));
      }
      .last-updated-on {
        font-style: italic;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div
          class="hero"
          style={{
            backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${heroImage?.url})`,
          }}
        >
          <h1>{title}</h1>
          <div class="date">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <a href={heroImage?.credit.url}>
            <span class="credit">
              Image by {heroImage?.credit.name}
            </span>
          </a>
        </div>
      </article>
      <div class="prose">
        <slot />
      </div>
    </main>
    <Footer />
  </body>
</html>
